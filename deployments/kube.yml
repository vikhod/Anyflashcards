---
  - hosts: kube
    become: true
    collections:
      - community.kubernetes.k8s
    tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'gnupg', 'lsb-release', 'wget' ]

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name={{ item }} state=latest
      loop: [ 'docker-ce', 'docker-ce-cli', 'containerd.io' ]
    
    - name: Add docker group
      group:
        name: docker
        state: present

    - name: Add user ubuntu to the docker group
      user:
        name: ubuntu
        append: yes
        groups: docker
    
    - name: Reset ssh connection to allow user changes to affect ansible user
      meta:
        reset_connection

    - name: Verify docker
      command: docker run hello-world
      register: ver_doc

    - name: Print verifying result
      debug:
        msg: " {{ ver_doc.stdout_lines[1] }} "

    - name: Get K3s installation script
      get_url:
        url: https://get.k3s.io
        dest: /etc/k3s_inst_script.sh
        mode: '0755'

    - name: Install K3s with docker
      command: sh /etc/k3s_inst_script.sh --docker --write-kubeconfig-mode 644

    - name: Deploy the Kubernetes dashboard
      ignore_errors: yes
      shell:
        cmd: |
          GITHUB_URL=https://github.com/kubernetes/dashboard/releases
          VERSION_KUBE_DASHBOARD=$(curl -w '%{url_effective}' -I -L -s -S ${GITHUB_URL}/latest -o /dev/null | sed -e 's|.*/||')
          k3s kubectl create -f https://raw.githubusercontent.com/kubernetes/dashboard/${VERSION_KUBE_DASHBOARD}/aio/deploy/recommended.yaml

    - name: Copy K3s dashboard file 1
      copy:
        src: dashboard.admin-user.yml
        dest: /etc/dashboard.admin-user.yml

    - name: Copy K3s dashboard file 2
      copy:
        src: dashboard.admin-user-role.yml
        dest: /etc/dashboard.admin-user-role.yml
      
    - name: Config Kubernetes dashboard
      ignore_errors: yes
      command: k3s kubectl create -f /etc/dashboard.admin-user.yml -f /etc/dashboard.admin-user-role.yml

# sudo pip3 install openshift  
    - name: Config dashboard service for external connection
      become: false
      k8s:
        api_version: v1
        kind: Service
        state: present
        name: kubernetes-dashboard
        namespace: kubernetes-dashboard
        definition:
          spec:
            type: NodePort
      tags:
        - now
      


#    - name: Get Kubectl binar file
#      get_url:
#       url: https://dl.k8s.io/release/{{ curl_kubectl_version.stdout }}//bin/linux/amd64/kubectl
#       dest: /usr/local/bin/
#        mode: '0755'

#    - name: Get Minikube binar file
#      get_url:
#        url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
#        dest: /usr/local/bin/minikube
#       mode: '0755'

#    - name: Start minikube
#      become: false
#      command: minikube start --driver=docker
#      register: minikube_start_stdout
    
#    - name: Minikube dashboard
#      become: false
#      command: minikube dashboard --port=8080
#      register: minikube_start_stdout
#      tags:
#        - now
    
#    - name: Print verifying result
#      debug:
#        msg: " {{ minikube_start_stdout.stdout }} "
#      tags:
#        - now


# TODO Move all credentials into eyaml



